<?xml version="1.0" encoding="UTF-8"?><record_update table="x_424426_devops_context_menu_item">
    <x_424426_devops_context_menu_item action="INSERT_OR_UPDATE">
        <active>true</active>
        <client_script><![CDATA[/* global $context, g_form, GlideAjax, GlideModalForm, Table, devStudioAPI */
/* eslint no-undef: "error" */
(function ($context) {
	if (g_form.getTableName() == 'ni') {
		// ni => catalog item
		const ga = new GlideAjax('x_424426_devops.TranslateUtilClient').setScope('x_424426_devops');
		ga.addParam('sysparm_name', 'getCatalogFieldData');
		ga.addParam('field', g_form.getActualName($context.FIELD).split(':')[1]);
		ga.getXMLAnswer(function (result) {
			result = JSON.parse(result);
			if (result.status == 'success') {
				var gmf = new GlideModalForm('Translations for "' + $context.FIELD + '"', result.table + '_list', function () {
					// on render callback
				}, false);
				
				// if in Studio, add the currently selected scoped so that
				// the translations are created in the currently selected application
				if (typeof devStudioAPI !== "undefined") {
					gmf.addParm("sysparm_transaction_scope", devStudioAPI.appMetadata.APP_ID);
				}
				
				gmf.addParm('sysparm_query', result.query);
				gmf.render();
			} else if (result.message) {
				g_form.addErrorMessage(result.message);
			}
		});
		
		return;
	}
	
	var table = '';
	var query = '';
	var typeElement = g_form.getLabel($context.FIELD).closest('[type]');
	if (typeElement) {
		var type = typeElement.getAttribute('type');
		// the translations need to happen with the base table of the translated field
		var t = Table.get(g_form.getTableName());
		var e = t.getElement($context.FIELD);
		var fieldTable = e.getTableName();
		
		if (type == 'translated_html' || type == 'translated_text') {
			// need to get the base table of the field
			table = 'sys_translated_text';
			query = 'tablename=' + g_form.getTableName() +
				'^fieldname=' + $context.FIELD +
				'^documentkey=' +  g_form.getUniqueValue();
		} else if (type == 'translated_field') {
			table = 'sys_translated';
			query = 'name=' + fieldTable + '^element=' + $context.FIELD + '^value=' + g_form.getValue($context.FIELD);
		} else if (type == 'documentation_field') {
			table = 'sys_documentation';
			query = 'name=' + fieldTable + '^element';
			if (fieldTable == 'sys_dictionary') {
				query += '=' + $context.FIELD;
			} else {
				query += 'ISEMPTY';
			}
		}
	}
	
	if (table) {
		var gmf = new GlideModalForm('Translations for "' + $context.FIELD + '"', table + '_list', function () {
			// on render callback
		}, false);
		gmf.addParm('sysparm_query', query);
		
		// if in Studio, add the currently selected scoped so that
		// the translations are created in the currently selected application
		if (typeof devStudioAPI !== "undefined") {
			gmf.addParm("sysparm_transaction_scope", devStudioAPI.appMetadata.APP_ID);
		}
		
		gmf.render();
	}
	
})($context);]]></client_script>
        <condition_script><![CDATA[/* global $context, g_form */
/* eslint no-undef: "error" */
(function ($context) {
	if (g_form.getTableName() == 'ni') {
		// Catalog Item variables are always translatable
		return true;
	}
	
	const element = g_form.getGlideUIElement($context.FIELD);
	if (element) {
		const type = element.type;
		if (type == 'translated_html') {
			return true;
		} else if (type == 'translated_text') {
			return true;
		} else if (type == 'translated_field') {
			return true;
		} else if (type == 'documentation_field') {
			return true;
		}
	}

	return false;
})($context);]]></condition_script>
        <item_type>link</item_type>
        <label>translations</label>
        <order>500</order>
        <sys_class_name>x_424426_devops_context_menu_item</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-12 20:41:35</sys_created_on>
        <sys_id>63b91e47975b2510d70ef207f053af22</sys_id>
        <sys_mod_count>46</sys_mod_count>
        <sys_name>translations</sys_name>
        <sys_package display_value="DevOps+" source="x_424426_devops">0b41a31b97cf2110d70ef207f053afb0</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevOps+">0b41a31b97cf2110d70ef207f053afb0</sys_scope>
        <sys_update_name>x_424426_devops_context_menu_item_63b91e47975b2510d70ef207f053af22</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-07-06 21:03:49</sys_updated_on>
        <type>field</type>
        <use_condition>true</use_condition>
    </x_424426_devops_context_menu_item>
</record_update>
