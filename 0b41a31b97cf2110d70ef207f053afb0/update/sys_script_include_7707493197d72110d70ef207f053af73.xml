<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_424426_devops.MetadataUtil</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>MetadataUtil</name>
        <script><![CDATA[/* global gs, Class, GlideRecord, GlideScriptedExtensionPoint */
/* eslint no-undef: "error" */
var MetadataUtil = Class.create();
MetadataUtil.prototype = {
    initialize: function() {
		// this is the out of the box 'Version' relationship SysID (sys_relationship record)
		this.ootbVersionRelationshipSysID = '67bdac52374010008687ddb1967334ee';
		
		const hasRoleGr = new GlideRecord('sys_user_has_role');
		hasRoleGr.addQuery('role.name', 'x_424426_devops.devops_user');
		hasRoleGr.addQuery('user', gs.getUserID());
		hasRoleGr.setLimit(1);
		hasRoleGr.query();
		this.hasUserRole = hasRoleGr.hasNext() && gs.hasRole('admin');
    },
	
	shouldDisplayShowVersionUIAction: function (metadataGr, action) {
		// only display the 'Show Versions' UI Action if there current user is an admin ...
		if (this.hasUserRole && metadataGr.canRead()) {
			// ... and if there the 'Versions' Related List isn't already on the current view
			const view = action.getGlideURI().get('sysparm_view') || '';
			const table = metadataGr.getRecordClassName();
			
			const relatedListEntryGr = new GlideRecord('sys_ui_related_list_entry');
			relatedListEntryGr.addQuery('list_id.name', table);
			// check for 'Versions' on the 'Default view' if there related lists aren't configured on the current view
			relatedListEntryGr.addQuery('list_id.view.name', (view && hasRelatedListsConfigured(table, view)) ? view : '');
			relatedListEntryGr.addQuery('related_list', 'REL:' + this.ootbVersionRelationshipSysID);
			relatedListEntryGr.setLimit(1);
			relatedListEntryGr.query();
			if (!relatedListEntryGr.hasNext()) {
				return true;
			}
		}
		
		return false;
		
		function hasRelatedListsConfigured(table, view) {
			const relatedListEntryGr = new GlideRecord('sys_ui_related_list_entry');
			relatedListEntryGr.addQuery('list_id.name', table);
			relatedListEntryGr.addQuery('list_id.view.name', view);
			relatedListEntryGr.setLimit(1);
			relatedListEntryGr.query();
			return relatedListEntryGr.hasNext();
		}
	},

    type: 'MetadataUtil'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-08 17:15:16</sys_created_on>
        <sys_id>7707493197d72110d70ef207f053af73</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>MetadataUtil</sys_name>
        <sys_package display_value="DevOps+" source="x_424426_devops">0b41a31b97cf2110d70ef207f053afb0</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevOps+">0b41a31b97cf2110d70ef207f053afb0</sys_scope>
        <sys_update_name>sys_script_include_7707493197d72110d70ef207f053af73</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2023-11-24 23:57:23</sys_updated_on>
    </sys_script_include>
</record_update>
