<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[/* global addLoadEvent, gel, getMessage, jslog, GlideAjax, XMLHttpRequest, window, setTimeout */
/* eslint no-undef: "error" */
addLoadEvent(function () {
	x_424426_devops_ValuesChanged();
	
	['x_424426_devops_script_include'].forEach(function (fieldId) {
		var ref = gel(fieldId);
		// unfortunately the ootb event weren't registered using propert addEventListener...
		var onChange = ref.getAttribute('onchange');
		ref.setAttribute('onchange', 'x_424426_devops_ValuesChanged();' + onChange);
	});
});

function x_424426_devops_ValuesChanged() {
	var okButton = gel('x_424426_devops_ok');
	var mandatoryFilled = true;
	['x_424426_devops_script_include'].forEach(function (fieldId) {
		var ref = gel(fieldId);
		var row = ref.closest('div.row');
		if (ref.value) {
			row.classList.add('is-filled');
		} else {
			mandatoryFilled = false;
			row.classList.remove('is-filled');
		}
	});
	
	if (mandatoryFilled) {
		okButton.removeAttribute('disabled');
	} else {
		okButton.setAttribute('disabled', '');
	}
}

function x_424426_devops_onOK() {
	var scriptInclude = gel('x_424426_devops_script_include').value;
	if (scriptInclude) {
		gel('x_424426_devops_error_row').style.display = 'none';
		gel('x_424426_devops_loading').style.display = '';
		gel('x_424426_devops_ok').setAttribute('disabled', '');
		var progressBar = gel('devops-progress-bar');
		progressBar.setAttribute('aria-valuenow', '0');
		progressBar.style.width = '0%';
		decryptScriptInclude(scriptInclude);
	} else {
		getMessage(['{0} is mandatory!', 'Script Include', 'Credentials'], function (msgs) {
			gel('x_424426_devops_error_row').style.display = '';
			var errorMessages = [];
			if (!scriptInclude) {
				errorMessages.push(msgs['{0} is mandatory!'].withValues(['"' + msgs['Script Include'] + '"']));
			}
			
			gel('x_424426_devops_error_message').innerHTML = errorMessages.join('<br />');
		});
	}
}

function decryptScriptInclude(scriptIncludeSysID) {
	var backupTerms = ['GlideRecord', 'GlideRecordSecure', 'gs.', 'JSON', 'for (', 'for(', 'while', '.next', 'if(', 'if (', '.query', '.next', '.addQuery', ': function', 'Packages'];
	var maxIterations = 500;
	
	getScriptIncludeInfo(scriptIncludeSysID, function (info) {
		var context = {
			scriptIncludeInfo: info,
			iteration: 0,
			done: false,
			searchedTerms: [],
			searchTerm: info.name,
			lines: [],
			onDone: function () {
				gel('x_424426_devops_ok').removeAttribute('disabled');
				gel('x_424426_devops_loading').style.display = 'none';
				gel('x_424426_devops_code_row').style.display = '';
				var codeNode = gel('x_424426_devops_code');
				
				if (context.lines.length) {
					var code = '';
					for (var i = 1; i < context.lines.length; i++) {
						code += 'Line ' + i + ': ';

						if (context.lines[i] === undefined) {
							code += '/* Unable to decrypt */';
						} else {
							code += context.lines[i].replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;');
						}

						code += '<br />';
					}

					codeNode.setAttribute('rows', context.lines.length);
					codeNode.innerHTML = code;
				} else {
					codeNode.innerHTML = 'Unable to decrypt Script Include ...';
				}
			}
		};
		
		decrypt(context);
	}, onError);
	
	function decrypt(context) {
		var progressBar = gel('devops-progress-bar');
		
		if (context.done) {
			context.onDone(context);
		} else if (context.iteration++ < maxIterations) {
			x_424426_devops_search('sys_script_include', context.searchTerm, context.scriptIncludeInfo.scope.sys_id, false, function (searchResult) {
				context.searchedTerms.push(context.searchTerm);
				context.done = true;
				
				if (searchResult.hits && searchResult.hits.length > 0) {
					// we are only interested in hits of your script include!
					var scriptIncludeResult = searchResult.hits.find(function (x) { return x.sysId == context.scriptIncludeInfo.sys_id; });
					if (scriptIncludeResult) {
						// we are only interested in hits in script-field!
						var scriptResult = scriptIncludeResult.matches.find(function (x) { return x.field == 'script'; });
						if (scriptResult) {
							// merge new matches with saved code
							scriptResult.lineMatches.filter(function (l) { return !(l.line in context.lines); }).forEach(function (l) {
								context.lines[l.line] = l.context;
							});
						}
					}
				}
				
				var hasEmptyLines = false;
				var maxLines = context.lines.length;
				if (maxLines) {
					var filledLines = 0;
					// using for... because .some doesnt work here (this will only check actuall existing elements, but we dont have a sparse-array!)
					for (var lineNum = 1; lineNum < maxLines; lineNum++) {
						if (context.lines[lineNum] === undefined) {
							hasEmptyLines = true;
						} else {
							filledLines++;
						}
					}
					
					var percentComplete = Math.floor(filledLines / maxLines * 100);
					progressBar.setAttribute('aria-valuenow', percentComplete);
					progressBar.style.width = percentComplete + '%';
				}

				if (hasEmptyLines || maxLines == 0) {
					var bestSearchTerm = context.lines.filter(function (l) { return l !== undefined; }).sort(function (a, b) { return b.length - a.length; }).filter(function (t) { return context.searchedTerms.indexOf(t) === -1; });
					if (bestSearchTerm.length == 0) {
						bestSearchTerm = backupTerms.filter(function (t) { return context.searchedTerms.indexOf(t) === -1; });
					}
					
					if (bestSearchTerm.length) {
						context.searchTerm = bestSearchTerm[0];
						context.done = false;
					}
				}
				
				setTimeout(decrypt.bind(null, context));
			}, onError);
		} else {
			onError('Max iterations!');
		}
	}
	
	function onError(errorMessage) {
		gel('x_424426_devops_ok').removeAttribute('disabled');
		gel('x_424426_devops_loading').style.display = 'none';
		gel('x_424426_devops_error_row').style.display = '';
		gel('x_424426_devops_error_message').innerHTML = errorMessage;
		jslog(errorMessage, 'x_424426_devops');
	}
}

function getScriptIncludeInfo(scriptIncludeSysID, onSuccess, onError) {
	var ga = new GlideAjax('CodeSearchUtilClient');
	ga.addParam('sysparm_name', 'getScriptIncludeInfo');
	ga.addParam('script_include', scriptIncludeSysID);
	ga.getXMLAnswer(function (answer) {
		try {
			var result = JSON.parse(answer);
			if (result.status == 'success') {
				onSuccess(result.script_include);
			} else {
				throw new Error(result.message);
			}
		} catch (e) {
			onError(e.message);
		}
	});
}

function x_424426_devops_search(table, term, scopeSysID, allScopes, onSuccess, onError) {
	var url = 'api/sn_codesearch/code_search/search';
	url += '?search_all_scopes=' + String(!!allScopes);
	
	if (scopeSysID) {
		url += '&current_app=' + scopeSysID;
	}
	
	url += '&table=' + table;
	url += '&term=' + encodeURIComponent(term.trim());

	var client = new XMLHttpRequest();
	client.open('GET', url);
	client.setRequestHeader('X-UserToken', window.g_ck);
	client.setRequestHeader('Accept','application/json');
	client.setRequestHeader('Content-Type','application/json');
	client.onreadystatechange = function() { 
		if (this.readyState == this.DONE) {
			var result = JSON.parse(this.response).result;
			onSuccess(result);
		}
	};

	client.send();
}]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_424426_devops_decrypt_script_include.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<g:evaluate var="jvar_script_include_sys_id" expression="RP.getParameterValue('script_include')" />
	<g:evaluate var="jvar_script_include_displayvalue" object="true">
		var displayValue = '';
		var siSysID = RP.getParameterValue('script_include');
		if (siSysID) {
			var scriptIncludeGr = new GlideRecordSecure('sys_script_include');
			scriptIncludeGr.addQuery('sys_id', siSysID);
			scriptIncludeGr.setLimit(1);
			scriptIncludeGr.query();
			if (scriptIncludeGr.next()) {
				displayValue = scriptIncludeGr.getDisplayValue();
			}
		}
		
		displayValue;
	</g:evaluate>
	<style>
		.x_424426_devops_decrypt_script_include_cancel_button {
			display: none;
		}
	</style>
	<div class="container">
		<div class="row">
			<div class="col-md-12">
				<p>Welcome to DevOps+ Script Include Decrypter</p>
				<p>Using this tool, you will be able to decrypt almost every "protected" script include.</p>
			</div>
		</div>
		<div class="row">
			<div class="form-group is-required form-horizontal">
				<div class="col-md-2">
					<g:form_label>${gs.getMessage('Script Include')}</g:form_label>
				</div>
				<div class="col-md-6">
					<g:ui_reference name="x_424426_devops_script_include"
						table="sys_script_include" query="sys_policy=protected"
						value="${jvar_script_include_sys_id}"
						displayvalue="${jvar_script_include_displayvalue}"
					/>
				</div>
			</div>
		</div>
		<div class="row" style="margin-top: 1rem">
			<div class="form-group form-horizontal">
				<div class="col-md-8 text-right">
					<g:dialog_buttons_ok_cancel
						ok_type     = "button"
						ok_id       = "x_424426_devops_ok"
						ok          = "return x_424426_devops_onOK()"
						ok_text     = "${gs.getMessage('Decrypt')}"
						cancel_style_class = "x_424426_devops_decrypt_script_include_cancel_button"
					/>
				</div>
			</div>
		</div>
		<div class="row" id="x_424426_devops_loading" style="display: none; margin-top: 1rem;">
			<div class="progress">
				<div id="devops-progress-bar" class="progress-bar" role="progressbar" width="0%" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
				</div>
			</div>
		</div>
		<div class="row" style="margin-top: 1rem; display: none;" id="x_424426_devops_error_row">
			<p class="col-md-8" id="x_424426_devops_error_message" style="color: red;"></p>
		</div>
		<div class="row" id="x_424426_devops_code_row" style="margin-top: 1rem; display: none;">
			<div class="col-md-12">
				<pre id="x_424426_devops_code" class="javascript hljs" cols="80" title="Script Include Decrypted"></pre>
			</div>
		</div>
	</div>
</j:jelly>]]></html>
        <name>decrypt_script_include</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-07 10:11:42</sys_created_on>
        <sys_id>bbcdd6d597d32110d70ef207f053afe0</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>decrypt_script_include</sys_name>
        <sys_package display_value="DevOps+" source="x_424426_devops">0b41a31b97cf2110d70ef207f053afb0</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevOps+">0b41a31b97cf2110d70ef207f053afb0</sys_scope>
        <sys_update_name>sys_ui_page_bbcdd6d597d32110d70ef207f053afe0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-07 18:33:48</sys_updated_on>
    </sys_ui_page>
</record_update>
