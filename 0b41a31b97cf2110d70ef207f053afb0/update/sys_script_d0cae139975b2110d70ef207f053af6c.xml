<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_metadata</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>DevOps+ Generate Scratchpad</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions>x_424426_devops.devops_user</role_conditions>
        <script><![CDATA[/* global g_scratchpad, current, previous, gs, GlideTableHierarchy, x_424426_devops, RP */
/* eslint no-undef: "error" */
(function executeRule(current, previous /*null when async*/) {

	const canRead = current.canRead();
	if (!canRead) {
		return;
	}
	
	g_scratchpad.devops_plus = {
		transaction_scope: gs.getCurrentApplicationId(), // this returns the correct scope (also in 'To edit this record click here' mode)
		is_dev_studio: RP.isInDevStudio(),
		can_write: current.canWrite() && !current.isNewRecord(),
		can_read: canRead,
		update_name: current.sys_update_name.toString(),
		fields: [],
		config: new x_424426_devops.ConfigUtilClient().getConfig()
	};
	
	try {
		if (gs.getUser().getPreference('devops_show_hidden_metadata') == 'true') {
			const tables = new GlideTableHierarchy(current.getRecordClassName()).getTables();
			const tableToFields = JSON.parse(gs.getProperty('x_424426_devops.hidden_metadata'));
			for (let table in tableToFields) {
				if (tables.indexOf(table) != -1) {
					tableToFields[table].forEach(fieldName => {
						const fieldElement = current.getElement(fieldName);
						if (fieldElement != null && fieldElement.canRead()) {
							const field = {
								name: fieldName,
								label: fieldElement.getLabel(),
								value: fieldElement.toString(),
								display_value: fieldElement.getDisplayValue(),
								type: fieldElement.getED().getInternalType()
							};
							
							if (field.type == 'reference') {
								field.table_name = fieldElement.getReferenceTable();
							}
							
							if (tables.indexOf('sys_metadata') != -1 && fieldName == 'sys_scope' && current.getValue('sys_scope') != gs.getCurrentApplicationId()) {
								// no need to show the scope if there is already "incorrect scope" error shown by the system
								return;
							}
							
							g_scratchpad.devops_plus.fields.push(field);
						}
					});
				}
			}
		}
	} catch (e) {
		g_scratchpad.devops_plus.error_message = 'Error handling hidden metadata: ' + e;
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-08 19:45:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d0cae139975b2110d70ef207f053af6c</sys_id>
        <sys_mod_count>51</sys_mod_count>
        <sys_name>DevOps+ Generate Scratchpad</sys_name>
        <sys_overrides/>
        <sys_package display_value="DevOps+" source="x_424426_devops">0b41a31b97cf2110d70ef207f053afb0</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevOps+">0b41a31b97cf2110d70ef207f053afb0</sys_scope>
        <sys_update_name>sys_script_d0cae139975b2110d70ef207f053af6c</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-07-08 20:07:30</sys_updated_on>
        <template/>
        <when>before_display</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d0cae139975b2110d70ef207f053af6c"/>
</record_update>
